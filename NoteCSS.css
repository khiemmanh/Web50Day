/* (1. Flexbox trong CSS
https://viblo.asia/p/giai-thich-hoat-dong-cua-flexbox-thong-qua-anh-gif-ByEZkp14lQ0 )
*/
.container{
    display: flex;
    flex-direction: column-reverse; /* change main axis is row or colume */
    justify-content: flex-start; /* căn chỉnh các items trên main axis, căn giữa thì cần set hight cho container */
    align-items: flex-end;
    flex-wrap: wrap-reverse; /* item bị wrap sẽ lên trên */
    height: 90hv; /* 90% khung nhìn: 90vw */
    transition: flex 0.7s ease-in;

}

.item{
    align-self: flex-end;
    margin: auto;
}


/* 2. CSS Variable - Cách đặt biến trong CSS */
:root{
    /* Đây là biến Global, dùng được mọi nơi trong file .css */
    --text-color: green;
}

h1{
    color: var(--text-color);
}

h2{
    /* Đây là biến local */
    --my-color: red;
    color: var(--my-color);
}

/* (3. CSS Unit - các đơn vị trong CSS
    - Absolute units(px, pt, cm, mm, inch, pc) = tuyệt đối, không bị thay đổi
    - Relative units(%, rem, em, vw, vh, vmin, vmax, ex, ch) - tương đối, kích thước sẽ bị thay đổi
        - vh: viewport hight
        - vw: viewport width
        - rem: 1 đơn vị phục thuộc vào thẻ html
        - em: 1 đơn vị phụ thuộc vào thẻ cha gần nhất chứa nó đã được định nghĩa (VD thẻ cha định nghĩa font-size: 50px))
*/


/* (4: CSS padding, border, margin) 
    - Compare to between Padding and Margin
    - Border và padding làm tăng tổng kích thước của element
    - margin mục đích tạo khoảng các với các element khác (không làm tăng kích thước của element)
*/

.border{
    border-width: 10px;
    border-style: solid; /* default with là 2x */
    border-radius: 5px;
    border-color: brown;
}



/* (5. CSS Box-sizing 
    box-sizing: border-box; giữ nguyên tổng kích thước của element, khi mà padding or border không quá lớn )
*/

.box{
    width: 100px;
    height: 100px;
    background-color: cadetblue;
    padding: 16px;
    border: 2px solid #333;
    box-sizing: border-box; /* Tổng element box được giữ nguyên là 100px. Nhưng content chỉ còn 64px (vì -2*16px padding- 2*2px border) */
}


/* (6. background-clip 
    Mục đích chỉ đổi màu background cho content. Hay padding + content. Hay (border + padding + content)
    VD: Muốn đổ màu background chỉ cho content thôi (ko có padding và border)
*/

.backgroundclip{
    /* background-clip sử dụng cho background-color */
    background-clip: border-box; /* background for border + padding + content */
    background-clip: padding-box; /* background for  padding + content */
    background-clip: content-box; /* background for  only content */
}


/* 7. CSS background-image 
    - background-size
        - contain: thay đổi kích thước đảm bảo tỷ lệ kích thước ảnh hiển thị đầy đủ.
        - cover: Thay đổi kích thước hình nền để bao phủ toàn bộ vùng chứa, ngay cả khi nó phải kéo dài hình ảnh hoặc cắt một chút khỏi một trong các cạnh
*/

.backgroundimage{
    background-image: linear-gradient(95deg, red, rgba(255, 255, 0, 0.5)), url(imagelink01);
    background-image: url(imagelink), url(imagelink02);
    background-size: auto; /* https://developer.mozilla.org/en-US/docs/Web/CSS/background-size */
    background-repeat: no-repeat; /* repeat-x or repeat-y  */

    /* background-origin giống với background-clip
         - background-origin sử dụng cho background-image
         - background-clip sử dụng cho background-color */
    background-origin: content-box;
    background-position: top -20px right 20%;
}


/* (8. CSS function
    -var(), linear-gradient(), rgba(), rgb(), calc(), attr()
        - rgba(): có thông số anpha để tạo màu trong suốt
        - attr(): sử dụng với lớp giả ( ::after, ::before)
*/

/* (9. CSS pseudo-classes - lớp giả 
    - :root tham chiếu đến <html> elment 
    - :hover
    - :active chỉ được kích hoạt khi click và giữ chuột vào element
    - :first-child
    - :last-child )
*/

h1:hover{
    color: brown;
}












 